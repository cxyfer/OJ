"""
構造 / 猜結論

由於 1 ⊕ 2 ⊕ ... ⊕ (2^k - 1) = 0，
若 N = 2^k，則在上述式子後補一個 2^k，答案為 2^k；
對於 2^k < N < 2^(k+1) 的情況，答案為 2^(k+1) - 1，構造方案如下所述。

若 N 為奇數，可以分成三段： 
1 ⊕ 2 ⊕ ... ⊕ (2^k - 2) = 2^k - 1
(2^k - 1) ⊕ (2^k - 1) = 0
2^k = 2^k
剩下偶數個數字可以兩兩一對，每對的 XOR 為 0。

若 N 為偶數，把上述的 (2^k - 1) 替換為 (2^(k - 1) - 1) ⊕ (2^(k - 1)) 即可。
"""

T = int(input())

for _ in range(T):
    N = int(input())
    if N == 2:
        ans = 3
    elif N == 3:
        ans = 2
    elif (N & (N - 1)) == 0:
        ans = N
    else:
        ans = (1 << N.bit_length()) - 1
    print(ans)